---
import type { HTMLTag, Polymorphic } from 'astro/types'
import { cva, type VariantProps } from 'class-variance-authority'
import { twMerge } from 'tailwind-merge'

const button = cva('border uppercase px-6 py-3 w-fit text-center hover:transition-colors', {
	variants: {
		variant: {
			outlined:
				'text-black border-black hover:bg-black hover:text-white dark:text-white dark:border-white dark:hover:bg-white dark:hover:text-black',
			filled:
				'border-black bg-black text-white hover:bg-white hover:text-black dark:text-black dark:bg-white dark:border-white dark:hover:bg-black dark:hover:text-white'
		},
		size: {
			normal: null,
			large: 'sm:text-lg'
		}
	},
	defaultVariants: {
		variant: 'outlined',
		size: 'normal'
	}
})

type Props<Tag extends HTMLTag> = Polymorphic<{
	as: Tag
}> &
	VariantProps<typeof button>

const { variant, size, class: className, as: Tag = 'button', ...props } = Astro.props
---

<Tag {...props} class={twMerge(button({ className, variant, size }))}>
	<slot />
</Tag>
