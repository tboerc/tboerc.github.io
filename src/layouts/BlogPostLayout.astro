---
import type { CollectionEntry } from 'astro:content'
import { Image } from 'astro:assets'
import Title from '@components/Title.astro'
import BaseLayout from '@layouts/BaseLayout.astro'
import PostDate from '@components/Blog/Post/PostDate.astro'
import { i18n } from '@i18n/index'

type Props = { body: string } & CollectionEntry<'blog'>['data']

const { t } = i18n(Astro.url)

const { title, description, body, image, imageAlt, publishDate } = Astro.props

const clearDescription = description.replace(/<\/?[^>]+(>|$)/g, '')

const readTime = (text: string) => {
	const wpm = 225
	const words = text.trim().split(/\s+/).length
	return Math.ceil(words / wpm)
}
---

<BaseLayout title={`${title} - Front Report`} description={clearDescription}>
	<Fragment slot="head">
		<meta property="og:type" content="article" />
		<meta property="og:url" content={Astro.url.href} />
		<meta property="og:title" content={`${title} - Front Report`} />
		<meta property="og:description" content={clearDescription} />
		{image?.src ? <meta property="og:image" content={Astro.site + image.src.slice(1)} /> : null}
	</Fragment>

	<main class="container 2xl:max-w-screen-xl">
		<div class="flex border-b border-black px-4 py-6 dark:border-white md:px-6 md:py-8">
			<div class="flex flex-col">
				<Title as="h1" type="h2">
					{title}
				</Title>
				<PostDate publishDate={publishDate}>
					- {readTime(body)}{' '}
					{t('blog.read')}
				</PostDate>
				<p class="mt-1 lg:text-xl" set:html={description} />
			</div>
		</div>

		<article
			class="prose mx-auto px-4 py-8 dark:prose-invert lg:prose-xl prose-img:mx-auto prose-hr:border-black dark:prose-img:border dark:prose-img:border-white dark:prose-hr:border-white md:px-0 md:py-12"
		>
			{image && imageAlt ? <Image src={image} width="820" height="580" alt={imageAlt} class="object-cover" /> : null}
			<slot />
		</article>
	</main>
</BaseLayout>
